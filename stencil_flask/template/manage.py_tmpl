#!/usr/bin/env python

import os
from functools import wraps
from argh import arg, ArghParser

DIR = os.path.dirname(__file__)
CONFIG = os.path.join(DIR, 'config', 'development.yml')
CONFIG = os.environ.get('{{ app_name|upper }}_CONFIG', CONFIG)


def with_app(func):
    @wraps(func)
    def wrapper(*args, **kwargs):
        from {{ app_name }} import create_app
        app = create_app(CONFIG)
        return func(app, *args, **kwargs)
    return wrapper


@arg('--host', default='127.0.0.1', help='the host')
@arg('--port', default=5000, help='the port')
@with_app
def runserver(app, args):
    app.run(args.host, args.port)


@with_app
def shell(app, args):
    from {{ app_name }}.helpers import get_shell
    with app.test_request_context():
        sh = get_shell()
        sh(app=app)


@arg('module', nargs='?')
@arg('-f', '--failfast', action='store_true', default=False)
def test(args):
    from unittest import TestLoader, TextTestRunner

    if args.module is None:
        start_dir = 'tests'
    else:
        start_dir = args.module.replace('.', '/')
    start_dir = os.path.join(DIR, start_dir)

    if args.module is None or os.path.isdir(start_dir):
        tests = TestLoader().discover(
            start_dir=start_dir,
            pattern='test_*.py',
            top_level_dir=DIR,
        )
    else:
        tests = TestLoader().loadTestsFromName(args.module)

    TextTestRunner(failfast=args.failfast).run(tests)


if __name__ == '__main__':
    parser = ArghParser()
    parser.add_commands([runserver, shell, test])
    parser.dispatch()
